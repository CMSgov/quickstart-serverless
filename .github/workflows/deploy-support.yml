name: Deploy Support

on:
  push:
    branches:
      # # List of all branches which should control underlying infrastructure.
      - master

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  set-and-validate-branch-name:
    name: set and validate branch name
    uses: ./.github/workflows/set-and-validate-branch-name.yml
    secrets:
      STAGE_PREFIX: ${{ secrets.STAGE_PREFIX }}

  deploy-support:
    needs: [set-and-validate-branch-name]
    name: deploy support
    runs-on: ubuntu-latest
    env:
      SLS_DEPRECATION_DISABLE: "*" # Turn off deprecation warnings in the pipeline
    steps:
      - name: check out repository
        uses: actions/checkout@v3

      - name: set up environment
        uses: ./.github/actions/set-up-env
        with:
          oidc-role: ${{ secrets.AWS_OIDC_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          branch-specific-oidc-role: ${{ secrets[format('{0}_{1}', needs.set-and-validate-branch-name.outputs.upcased-branch-name, 'AWS_OIDC_ROLE_TO_ASSUME')] }}
          branch-specific-aws-region: ${{ secrets[format('{0}_{1}', needs.set-and-validate-branch-name.outputs.upcased-branch-name, 'AWS_DEFAULT_REGION')] }}

      - name: lock this branch to prevent concurrent builds
        run: ./.github/scripts/github_lock.sh ${GITHUB_REF#refs/heads/}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: deploy support
        run: |
          # When deploying multiple copies of this quickstart to the same AWS Account (not ideal), a prefix helps prevent stepping on each other.
          # This can optionally be set as an GitHub Actions Secret
          ./scripts/deploy_support.sh ${{ format('{0}{1}', secrets.STAGE_PREFIX, needs.set-and-validate-branch-name.outputs.branch-name) }}

      - name: check for slack webhook secret
        id: slack
        uses: ./.github/actions/has-secret
        with:
          secret-to-check: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: slack notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ steps.slack.outputs.has-secret == true && failure() }} # pragma: allowlist secret
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: Deploy Alerts
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_COLOR: ${{job.status}}
          SLACK_FOOTER: ""
          MSG_MINIMAL: actions url,commit,ref
