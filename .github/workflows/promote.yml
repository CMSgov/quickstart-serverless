name: Promote

on:
  push:
    branches:
      - "master"

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  check-deploy-strategy:
    uses: ./.github/workflows/check-deploy-strategy.yml
    secrets:
      USE_AUTO_PROMOTION: ${{ secrets.USE_AUTO_PROMOTION }}

  # each subsequent job should be configured to need this job to effectively gate on the deploy strategy
  gate-on-deploy-strategy:
    needs: [check-deploy-strategy]
    runs-on: ubuntu-latest
    if: ${{ needs.check-deploy-strategy.outputs.deploy-strategy == 'auto-promotion' }}
    steps:
      - name: confirm deploy strategy
        run: echo "Using the auto-promotion deploy strategy"

  unit-tests:
    needs: gate-on-deploy-strategy
    name: run unit tests
    uses: ./.github/workflows/unit-test.yml
    secrets:
      CODE_CLIMATE_ID: ${{ secrets.CODE_CLIMATE_ID}}

  promote-dev:
    needs: [unit-tests, gate-on-deploy-strategy]
    name: promote to dev
    uses: ./.github/workflows/deploy-to-env.yml
    with:
      env: dev
    secrets: inherit

  cypress-dev:
    needs: [promote-dev, unit-tests, gate-on-deploy-strategy]
    name: cypress tests for dev
    uses: ./.github/workflows/cypress-for-env.yml
    with:
      env: dev
    secrets: inherit

  promote-val:
    needs: [cypress-dev, unit-tests, gate-on-deploy-strategy]
    name: promote to val
    uses: ./.github/workflows/deploy-to-env.yml
    with:
      env: val
    secrets: inherit

  cypress-val:
    needs: [promote-val, unit-tests, gate-on-deploy-strategy]
    name: cypress tests for val
    uses: ./.github/workflows/cypress-for-env.yml
    with:
      env: val
    secrets: inherit

  promote-production:
    needs: [cypress-val, unit-tests, gate-on-deploy-strategy]
    name: promote to production
    uses: ./.github/workflows/deploy-to-env.yml
    with:
      env: production
    secrets: inherit

  cypress-production:
    needs: [promote-production, unit-tests, gate-on-deploy-strategy]
    name: cypress tests for production
    uses: ./.github/workflows/cypress-for-env.yml
    with:
      env: production
    secrets: inherit

  notify-slack:
    needs:
      [
        promote-production,
        cypress-production,
        unit-tests,
        gate-on-deploy-strategy,
      ]
    if: always()
    name: notify slack on failure
    runs-on: ubuntu-latest
    steps:
      - name: check for slack webhook secret
        id: slack
        uses: ./.github/actions/has-secret
        with:
          secret-to-check: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: slack notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ steps.slack.outputs.has-secret == true && failure() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: Deploy Alerts
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_COLOR: ${{job.status}}
          SLACK_FOOTER: ""
          MSG_MINIMAL: actions url,commit,ref
